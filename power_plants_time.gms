
Parameters
            report(*,fuel, time, mperiod) universal set
            
            sumReport(*,*)
            
            emisReport(*,*, time, mperiod, fuel)

            costReport(*)
            ;

Scalar
        RefCO2 CO2 emitted without restrictions
        /3025824.7/
        
        RefCH4
        /135.3/
        
        RefN2O
        /44.7/
        
        EmisRed the percentage to which the emissions will be brought down to
        /0.9/
        ;

free variable
            TotCost total cost to produce energy in euro
;

positive variable
            POW(fuel, time, mperiod) power generated by each plant type each time step
            CO2Tot in kg
            CH4Tot in kg
            N2OTot in kg
            
            
;

equation
        objf minimise cost
        PowConst(time,mperiod) minimum total power needed constraint
        PowFuelDay(fuel,time, mperiod) capacity production of every plant type
        PowFuelNight(fuel,time, mperiod)
        CO2Const emission tot constraint
        CH4Const emission constraint
        N2OConst emission constraint
       
;

* calculate tot cost and emissions of current configuration of Berlin

objf.. TotCost
        =E=
        Sum((fuel, time, mperiod),
        p_data(fuel, "FuelCost") *
        POW(fuel, time, mperiod) +
        p_data(fuel, "OpCost") *
        POW(fuel, time, mperiod)
        );

* sum of all generated power greater than needed power        

PowConst(time,mperiod).. 
        
        Sum(fuel,
        POW(fuel, time, mperiod))
        =G=
        PowUse(time,mperiod);
        
* distribute total power btwn different power plants according to power constraint & min cost
        
PowFuelDay(fuel,time, mperiod)..
        POW(fuel, "day", mperiod)
        =L=
        supply_day(fuel, mperiod);

PowFuelNight(fuel,time, mperiod)..
        POW(fuel, "night", mperiod)
        =L=
        supply_night(fuel, mperiod);

* constrain emissions lower than normal emissions % with % as EmisRed

CO2Const.. 
        Sum((fuel,time, mperiod),
        p_data(fuel, "CO2Pot") *
        POW(fuel, time, mperiod)
        ) 
        =L=
        RefCO2 * EmisRed
;

        
CH4Const.. 
        Sum((fuel,time, mperiod),
        p_data(fuel, "CH4Pot") *
        POW(fuel, time, mperiod)/1000
        ) 
        =L=
        RefCH4 * EmisRed 
;
        
N2OConst.. 
        Sum((fuel,time, mperiod),
        p_data(fuel, "N2OPot") *
        POW(fuel, time, mperiod)/1000
        )
        =L=
        RefN2O * EmisRed
;  

* base

model plants_base /objf, PowConst, PowFuelDay, PowFuelNight/;

solve plants_base using LP min TotCost;

report("base",fuel, time, mperiod) = POW.L(fuel,time, mperiod);

* emission sum

sumReport("base","CO2") = Sum((fuel,time, mperiod),p_data(fuel, "CO2Pot") *POW.L(fuel, time, mperiod) );

sumReport("base","CH4") = Sum((fuel,time, mperiod),p_data(fuel, "CH4Pot") *POW.L(fuel, time, mperiod) /1000);

sumReport("base","N2O") = Sum((fuel,time, mperiod),p_data(fuel, "N2OPot") *POW.L(fuel, time, mperiod) /1000);



* emission per day and fuel

emisReport("base","CO2", time, mperiod, fuel) = (p_data(fuel, "CO2Pot") *POW.L(fuel, time, mperiod) );

emisReport("base","CH4", time, mperiod, fuel) = (p_data(fuel, "CH4Pot") *POW.L(fuel, time, mperiod) / 1000);

emisReport("base","N2O", time, mperiod, fuel) = (p_data(fuel, "N2OPot") *POW.L(fuel, time, mperiod) /1000);


costReport("base") = TotCost.L;

* env

*$ontext

model plants_env /objf, PowConst, PowFuelDay, PowFuelNight, CO2Const, CH4Const, N2OConst/;

solve plants_env using LP min TotCost;

report("Env",fuel, time, mperiod) = POW.L(fuel,time, mperiod);


sumReport("Env","CO2") = Sum((fuel,time, mperiod),p_data(fuel, "CO2Pot") *POW.L(fuel, time, mperiod));

sumReport("Env","CH4") = Sum((fuel,time, mperiod),p_data(fuel, "CH4Pot") *POW.L(fuel, time, mperiod)/1000);

sumReport("Env","N2O") = Sum((fuel,time, mperiod),p_data(fuel, "N2OPot") *POW.L(fuel, time, mperiod)/1000);

emisReport("Env","CO2", time, mperiod, fuel) = (p_data(fuel, "CO2Pot") *POW.L(fuel, time, mperiod) );

emisReport("Env","CH4", time, mperiod, fuel) = (p_data(fuel, "CH4Pot") *POW.L(fuel, time, mperiod) / 1000);

emisReport("Env","N2O", time, mperiod, fuel) = (p_data(fuel, "N2OPot") *POW.L(fuel, time, mperiod) /1000);



costReport("Env") = TotCost.L;
*$offtext
display  report, sumReport, emisReport;

execute_unload "pp_time_out.gdx" report, sumReport, costReport, emisReport;
execute 'gdxxrw pp_time_out.gdx output = pp_writingSet.xlsx par = report rng = power!';
execute 'gdxxrw pp_time_out.gdx output = pp_writingSet.xlsx par = sumReport rng = emis!';
execute 'gdxxrw pp_time_out.gdx output = pp_writingSet.xlsx par = costReport rng = cost!';
execute 'gdxxrw pp_time_out.gdx output = pp_writingSet.xlsx par = emisReport rng = emis_day!';
